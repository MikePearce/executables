#!/usr/bin/python

# @desc     Grab the changed files using 'svn st' then run sniffer on those.
# @install  Put in directory in $PATH. chmod+x the file.
# @author   Mike Pearce <mike@mikepearce.net>
# @since    18/05/2010

# Grab some libraries
import os
import sys
import commands


#-------------------
def show_error(error="Undefined Error!", exitcode = 1):
#-------------------
    """Writes an error to stderr"""
    sys.stderr.write(error +"\n")
    sys.exit(exitcode)
    
def getChangesAndSniff(gitOrSvn='svn'):
    """ Based on the Repo Type, will grab all the changes and sniff them! """
     # First, run svn st
    if (gitOrSvn == 'svn'):
        cmd = 'svn st'
        prePadding = 8
    else:
        cms = 'git status -s'
        prePadding = 3

    # Run the command    
    out = commands.getoutput(cmd);

    # Check we have changed files
    if ( len(out) == 0 ):
        show_error('There are no changed files', 0)

    # For each change, run phpcs
    for line in out.split('\n'):

        # Make sure teh change ISN'T root
        if (line[prePadding:] != '.'):

            # Inform
            #sys.stdout.write('Sniffing "'+ line[prePadding:] +'"\n')

            # Run the command
            cmd = '/usr/local/php5/bin/phpcs '+ line[prePadding:]
            out = commands.getoutput(cmd);

            # If codesniffr isn't installed
            if ( out.find('No such file or directory') != -1 ):
                show_error('You do not have PHPCS installed!\n'+out)
            else:
                sys.stdout.write(out)


#-------------------
# Now, onto the main event!
#-------------------
if __name__ == "__main__":

    # First, make sure we've got a .svn dir
    if os.path.exists('.svn'):
       getChangesAndSniff('svn')
    # Maybe it's git?
    elif (os.path.exists('.git')):
       getChangesAndSniff('git')    
    # It's neither
    else:
	    show_error('This is not an svn or a git repo.')

